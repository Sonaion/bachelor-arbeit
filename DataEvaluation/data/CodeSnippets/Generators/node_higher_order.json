{
    "font-normal": "JetBrainsMono-Regular.ttf",
    "font-bold": "JetBrainsMono-Bold.ttf",
    "font-italic": "JetBrainsMono-BoldItalic.ttf",
    "font-bold-italic": "JetBrainsMono-Italic.ttf",
    "font-size": 14,
    "width-margin": 5,
    "height-margin": 5,
    "spacing": 8,
    "background-color": [
        255,
        255,
        255
    ],
    "source-code": [
        "from itertools import product",
        "from functools import reduce",
        "",
        "",
        "[AOI=Class]class Node:",
        "    def __init__(self, value):",
        "        self.value = value",
        "        self.left = None",
        "        self.right = None",
        "",
        "    def pre_order_iter(self):",
        "        result = [self]",
        "        if self.left is not None:",
        "            left = self.left.pre_order_iter()",
        "            result = result + left",
        "        if self.right is not None:",
        "            right = self.right.pre_order_iter()",
        "            result = result + right",
        "        return result[/AOI]",
        "",
        "",
        "[AOI=Method][AOI=MethodDeclaration]def function(node):[/AOI]",
        "[AOI=MethodBody]    duos = [AOI=HigherOrder]product(node.pre_order_iter(), node.pre_order_iter())[/AOI]",
        "    multiplies = [AOI=HigherOrder]map(lambda x: x[0].value * x[1].value, duos)[/AOI]",
        "    return [AOI=HigherOrder]reduce(lambda x, y: x + y, multiplies)[/AOI][/AOI][/AOI]",
        "",
        "",
        "[AOI=InputPreparation]n = Node(2)",
        "n.left = Node(1)",
        "n.right = Node(3)[/AOI]",
        "[AOI=StartOfAlgorithm]print(function(n))[/AOI]",
        ""
    ]
}